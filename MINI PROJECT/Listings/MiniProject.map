Component: ARM Compiler 5.06 update 6 (build 750) Tool: armlink [4d35ed]

==============================================================================

Section Cross References

    startup.o(RESET) refers to startup.o(STACK) for Stack_Top
    startup.o(RESET) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    pass.o(i.LCD_CmdWrite) refers to pass.o(i.LCD_SendHigherNibble) for LCD_SendHigherNibble
    pass.o(i.LCD_CmdWrite) refers to pass.o(i.LCD_SendCmdSignals) for LCD_SendCmdSignals
    pass.o(i.LCD_DataWrite) refers to pass.o(i.LCD_SendHigherNibble) for LCD_SendHigherNibble
    pass.o(i.LCD_DataWrite) refers to pass.o(i.LCD_SendDataSignals) for LCD_SendDataSignals
    pass.o(i.LCD_DisplayString) refers to pass.o(i.LCD_DataWrite) for LCD_DataWrite
    pass.o(i.LCD_Init) refers to pass.o(i.delay_ms) for delay_ms
    pass.o(i.LCD_Init) refers to pass.o(i.LCD_Reset) for LCD_Reset
    pass.o(i.LCD_Init) refers to pass.o(i.LCD_CmdWrite) for LCD_CmdWrite
    pass.o(i.LCD_Reset) refers to pass.o(i.LCD_SendHigherNibble) for LCD_SendHigherNibble
    pass.o(i.LCD_Reset) refers to pass.o(i.LCD_SendCmdSignals) for LCD_SendCmdSignals
    pass.o(i.LCD_Reset) refers to pass.o(i.delay_ms) for delay_ms
    pass.o(i.LCD_Reset) refers to pass.o(i.delay_us) for delay_us
    pass.o(i.LCD_SendCmdSignals) refers to pass.o(i.delay_us) for delay_us
    pass.o(i.LCD_SendDataSignals) refers to pass.o(i.delay_us) for delay_us
    pass.o(i.Timer0_ISR) refers to pass.o(i.adc) for adc
    pass.o(i.Timer0_ISR) refers to pass.o(i.alphadisp7SEG) for alphadisp7SEG
    pass.o(i.Timer0_ISR) refers to pass.o(i.runDCMotor) for runDCMotor
    pass.o(i.Timer0_ISR) refers to pass.o(.data) for x
    pass.o(i.alphadisp7SEG) refers to pass.o(i.getAlphaCode) for getAlphaCode
    pass.o(i.alphadisp7SEG) refers to pass.o(i.delay_ms) for delay_ms
    pass.o(i.main) refers to pass.o(i.SystemInit) for SystemInit
    pass.o(i.main) refers to pass.o(i.uart_init) for uart_init
    pass.o(i.main) refers to pass.o(i.LCD_Reset) for LCD_Reset
    pass.o(i.main) refers to pass.o(i.LCD_Init) for LCD_Init
    pass.o(i.main) refers to pass.o(i.show) for show
    pass.o(i.main) refers to pass.o(i.Timer0_ISR) for Timer0_ISR
    pass.o(i.main) refers to pass.o(.data) for PASSWORD
    pass.o(i.main) refers to pass.o(i.delay_ms) for delay_ms
    pass.o(i.main) refers to strcat.o(.text) for strcat
    pass.o(i.main) refers to strcmp.o(.text) for strcmp
    pass.o(i.runDCMotor) refers to uidiv.o(.text) for __aeabi_uidivmod
    pass.o(i.show) refers to pass.o(i.delay_ms) for delay_ms
    pass.o(i.show) refers to pass.o(i.LCD_CmdWrite) for LCD_CmdWrite
    pass.o(i.show) refers to pass.o(i.LCD_DisplayString) for LCD_DisplayString
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup.o(STACK) for __initial_sp
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to pass.o(i.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to pass.o(i.main) for main
    init.o(.text) refers to init.o(i.__ARM_common_call_via_r3) for __ARM_common_call_via_r3
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload


==============================================================================

Removing Unused input sections from the image.

    Removing startup.o(HEAP), (0 bytes).

1 unused section(s) (total 0 bytes) removed from the image.

==============================================================================

Adding Veneers to the image

    Adding AT veneer (8 bytes, Inline) for call to '__aeabi_uidivmod' from pass.o(i.runDCMotor).
    Adding AT veneer (8 bytes, Inline) for call to 'strcat' from pass.o(i.main).
    Adding AT veneer (8 bytes, Inline) for call to 'strcmp' from pass.o(i.main).
    Adding AT veneer (8 bytes, Inline) for call to '__scatterload' from entry5.o(.ARM.Collect$$$$00000004).
    Adding TA veneer (8 bytes, Short) for call to '__main_after_scatterload' from init.o(.text).

5 Veneer(s) (total 40 bytes) added to the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    RESET                                    0x00000000   Section      264  startup.o(RESET)
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/string/strcat.c         0x00000000   Number         0  strcat.o ABSOLUTE
    ../clib/microlib/string/strcmp.c         0x00000000   Number         0  strcmp.o ABSOLUTE
    Startup.s                                0x00000000   Number         0  startup.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    pass.c                                   0x00000000   Number         0  pass.o ABSOLUTE
    Undef_Handler                            0x00000040   ARM Code       4  startup.o(RESET)
    SWI_Handler                              0x00000044   ARM Code       4  startup.o(RESET)
    PAbt_Handler                             0x00000048   ARM Code       4  startup.o(RESET)
    DAbt_Handler                             0x0000004c   ARM Code       4  startup.o(RESET)
    IRQ_Handler                              0x00000050   ARM Code       4  startup.o(RESET)
    FIQ_Handler                              0x00000054   ARM Code       4  startup.o(RESET)
    .ARM.Collect$$$$00000000                 0x00000108   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x00000108   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x0000010c   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x00000110   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x00000110   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x00000110   Section       12  entry9a.o(.ARM.Collect$$$$0000000B)
    .ARM.Collect$$$$0000000D                 0x0000011c   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x0000011c   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x0000011c   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    __lit__00000000                          0x0000011c   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .text                                    0x00000128   Section        0  uidiv.o(.text)
    .text                                    0x00000160   Section        0  strcat.o(.text)
    .text                                    0x00000180   Section        0  strcmp.o(.text)
    .text                                    0x000001ac   Section       32  init.o(.text)
    i.LCD_CmdWrite                           0x000001d4   Section        0  pass.o(i.LCD_CmdWrite)
    LCD_CmdWrite                             0x000001d4   ARM Code      48  pass.o(i.LCD_CmdWrite)
    i.LCD_DataWrite                          0x00000204   Section        0  pass.o(i.LCD_DataWrite)
    LCD_DataWrite                            0x00000204   ARM Code      48  pass.o(i.LCD_DataWrite)
    i.LCD_DisplayString                      0x00000234   Section        0  pass.o(i.LCD_DisplayString)
    i.LCD_Init                               0x0000025c   Section        0  pass.o(i.LCD_Init)
    LCD_Init                                 0x0000025c   ARM Code      56  pass.o(i.LCD_Init)
    i.LCD_Reset                              0x00000294   Section        0  pass.o(i.LCD_Reset)
    LCD_Reset                                0x00000294   ARM Code      92  pass.o(i.LCD_Reset)
    i.LCD_SendCmdSignals                     0x000002f0   Section        0  pass.o(i.LCD_SendCmdSignals)
    LCD_SendCmdSignals                       0x000002f0   ARM Code      52  pass.o(i.LCD_SendCmdSignals)
    i.LCD_SendDataSignals                    0x00000328   Section        0  pass.o(i.LCD_SendDataSignals)
    LCD_SendDataSignals                      0x00000328   ARM Code      52  pass.o(i.LCD_SendDataSignals)
    i.LCD_SendHigherNibble                   0x00000360   Section        0  pass.o(i.LCD_SendHigherNibble)
    LCD_SendHigherNibble                     0x00000360   ARM Code      32  pass.o(i.LCD_SendHigherNibble)
    i.SystemInit                             0x00000384   Section        0  pass.o(i.SystemInit)
    i.Timer0_ISR                             0x000003ec   Section        0  pass.o(i.Timer0_ISR)
    i.__ARM_common_call_via_r3               0x00000598   Section        2  init.o(i.__ARM_common_call_via_r3)
    i.__scatterload_copy                     0x0000059c   Section       28  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x000005b8   Section        4  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x000005bc   Section       24  handlers.o(i.__scatterload_zeroinit)
    i.adc                                    0x000005d4   Section        0  pass.o(i.adc)
    i.alphadisp7SEG                          0x000006c0   Section        0  pass.o(i.alphadisp7SEG)
    i.delay_ms                               0x000007b4   Section        0  pass.o(i.delay_ms)
    delay_ms                                 0x000007b4   ARM Code      48  pass.o(i.delay_ms)
    i.delay_us                               0x000007e8   Section        0  pass.o(i.delay_us)
    delay_us                                 0x000007e8   ARM Code      52  pass.o(i.delay_us)
    i.getAlphaCode                           0x0000081c   Section        0  pass.o(i.getAlphaCode)
    i.main                                   0x000009e8   Section        0  pass.o(i.main)
    i.runDCMotor                             0x00001128   Section        0  pass.o(i.runDCMotor)
    i.show                                   0x000011d0   Section        0  pass.o(i.show)
    i.uart_init                              0x00001254   Section        0  pass.o(i.uart_init)
    .data                                    0x40000000   Section       44  pass.o(.data)
    STACK                                    0x40000030   Section     1160  startup.o(STACK)
    Stack_Top                                0x400004b8   Data           0  startup.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv1$ARM_ISAv4$S$PE$A:L22$X:L11$S22$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  pass.o ABSOLUTE
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __decompress                              - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    Reset_Handler                            0x00000058   ARM Code       0  startup.o(RESET)
    __main                                   0x00000108   ARM Code       0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x00000108   ARM Code       0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x0000010c   ARM Code       0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x00000110   ARM Code       0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x00000110   ARM Code       0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x00000110   ARM Code       0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x00000110   ARM Code       0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x0000011c   ARM Code       0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x0000011c   ARM Code       0  entry11a.o(.ARM.Collect$$$$0000000F)
    Inline ARM to Thumb Veneer to __aeabi_uidivmod 0x00000120   ARM Code       8  uidiv.o(.text)
    __aeabi_uidiv                            0x00000129   Thumb Code     0  uidiv.o(.text)
    __aeabi_uidivmod                         0x00000129   Thumb Code    46  uidiv.o(.text)
    Inline ARM to Thumb Veneer to strcat     0x00000158   ARM Code       8  strcat.o(.text)
    strcat                                   0x00000161   Thumb Code    24  strcat.o(.text)
    Inline ARM to Thumb Veneer to strcmp     0x00000178   ARM Code       8  strcmp.o(.text)
    strcmp                                   0x00000181   Thumb Code    34  strcmp.o(.text)
    Inline ARM to Thumb Veneer to __scatterload 0x000001a4   ARM Code       8  init.o(.text)
    __scatterload                            0x000001ad   Thumb Code    24  init.o(.text)
    __scatterload_rt2                        0x000001ad   Thumb Code     0  init.o(.text)
    Short Thumb to ARM Veneer to __main_after_scatterload 0x000001cd   Thumb Code     8  anon$$obj.o(Veneer$$Code)
    LCD_DisplayString                        0x00000234   ARM Code      40  pass.o(i.LCD_DisplayString)
    SystemInit                               0x00000384   ARM Code     100  pass.o(i.SystemInit)
    Timer0_ISR                               0x000003ec   ARM Code     384  pass.o(i.Timer0_ISR)
    __ARM_common_call_via_r3                 0x00000599   Thumb Code     2  init.o(i.__ARM_common_call_via_r3)
    __scatterload_copy                       0x0000059c   ARM Code      28  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x000005b8   ARM Code       4  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x000005bc   ARM Code      24  handlers.o(i.__scatterload_zeroinit)
    adc                                      0x000005d4   ARM Code     220  pass.o(i.adc)
    alphadisp7SEG                            0x000006c0   ARM Code     240  pass.o(i.alphadisp7SEG)
    getAlphaCode                             0x0000081c   ARM Code     460  pass.o(i.getAlphaCode)
    main                                     0x000009e8   ARM Code    1856  pass.o(i.main)
    runDCMotor                               0x00001128   ARM Code     156  pass.o(i.runDCMotor)
    show                                     0x000011d0   ARM Code     132  pass.o(i.show)
    uart_init                                0x00001254   ARM Code      68  pass.o(i.uart_init)
    Region$$Table$$Base                      0x0000129c   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x000012bc   Number         0  anon$$obj.o(Region$$Table)
    PASSWORD                                 0x40000000   Data           9  pass.o(.data)
    lookup_table                             0x40000009   Data          16  pass.o(.data)
    rowsel                                   0x40000019   Data           1  pass.o(.data)
    colsel                                   0x4000001a   Data           1  pass.o(.data)
    doorLocked                               0x4000001c   Data           4  pass.o(.data)
    entered                                  0x40000020   Data           4  pass.o(.data)
    x                                        0x40000024   Data           4  pass.o(.data)
    dutyCycle                                0x40000028   Data           4  pass.o(.data)
    __initial_sp                             0x40000430   Data         136  startup.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x00000108

  Load Region LR_IROM1 (Base: 0x00000000, Size: 0x000012e8, Max: 0x00080000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x000012bc, Max: 0x00080000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x00000108   Code   RO            3    RESET               startup.o
    0x00000108   0x00000108   0x00000000   Code   RO          133  * .ARM.Collect$$$$00000000  mc_t.l(entry.o)
    0x00000108   0x00000108   0x00000004   Code   RO          142    .ARM.Collect$$$$00000001  mc_t.l(entry2.o)
    0x0000010c   0x0000010c   0x00000004   Code   RO          144    .ARM.Collect$$$$00000004  mc_t.l(entry5.o)
    0x00000110   0x00000110   0x00000000   Code   RO          146    .ARM.Collect$$$$00000008  mc_t.l(entry7b.o)
    0x00000110   0x00000110   0x00000000   Code   RO          148    .ARM.Collect$$$$0000000A  mc_t.l(entry8b.o)
    0x00000110   0x00000110   0x0000000c   Code   RO          149    .ARM.Collect$$$$0000000B  mc_t.l(entry9a.o)
    0x0000011c   0x0000011c   0x00000000   Code   RO          151    .ARM.Collect$$$$0000000D  mc_t.l(entry10a.o)
    0x0000011c   0x0000011c   0x00000000   Code   RO          153    .ARM.Collect$$$$0000000F  mc_t.l(entry11a.o)
    0x0000011c   0x0000011c   0x00000004   Code   RO          143    .ARM.Collect$$$$00002712  mc_t.l(entry2.o)
    0x00000120   0x00000120   0x00000008   Ven    RO          136    .text               mc_t.l(uidiv.o)
    0x00000128   0x00000128   0x0000002e   Code   RO          136    .text               mc_t.l(uidiv.o)
    0x00000156   0x00000156   0x00000002   PAD
    0x00000158   0x00000158   0x00000008   Ven    RO          138    .text               mc_t.l(strcat.o)
    0x00000160   0x00000160   0x00000018   Code   RO          138    .text               mc_t.l(strcat.o)
    0x00000178   0x00000178   0x00000008   Ven    RO          140    .text               mc_t.l(strcmp.o)
    0x00000180   0x00000180   0x00000022   Code   RO          140    .text               mc_t.l(strcmp.o)
    0x000001a2   0x000001a2   0x00000002   PAD
    0x000001a4   0x000001a4   0x00000008   Ven    RO          155    .text               mc_t.l(init.o)
    0x000001ac   0x000001ac   0x00000020   Code   RO          155    .text               mc_t.l(init.o)
    0x000001cc   0x000001cc   0x00000008   Ven    RO          171    Veneer$$Code        anon$$obj.o
    0x000001d4   0x000001d4   0x00000030   Code   RO            8    i.LCD_CmdWrite      pass.o
    0x00000204   0x00000204   0x00000030   Code   RO            9    i.LCD_DataWrite     pass.o
    0x00000234   0x00000234   0x00000028   Code   RO           10    i.LCD_DisplayString  pass.o
    0x0000025c   0x0000025c   0x00000038   Code   RO           11    i.LCD_Init          pass.o
    0x00000294   0x00000294   0x0000005c   Code   RO           12    i.LCD_Reset         pass.o
    0x000002f0   0x000002f0   0x00000038   Code   RO           13    i.LCD_SendCmdSignals  pass.o
    0x00000328   0x00000328   0x00000038   Code   RO           14    i.LCD_SendDataSignals  pass.o
    0x00000360   0x00000360   0x00000024   Code   RO           15    i.LCD_SendHigherNibble  pass.o
    0x00000384   0x00000384   0x00000068   Code   RO           16    i.SystemInit        pass.o
    0x000003ec   0x000003ec   0x000001ac   Code   RO           17    i.Timer0_ISR        pass.o
    0x00000598   0x00000598   0x00000002   Code   RO          157    i.__ARM_common_call_via_r3  mc_t.l(init.o)
    0x0000059a   0x0000059a   0x00000002   PAD
    0x0000059c   0x0000059c   0x0000001c   Code   RO          161    i.__scatterload_copy  mc_t.l(handlers.o)
    0x000005b8   0x000005b8   0x00000004   Code   RO          162    i.__scatterload_null  mc_t.l(handlers.o)
    0x000005bc   0x000005bc   0x00000018   Code   RO          163    i.__scatterload_zeroinit  mc_t.l(handlers.o)
    0x000005d4   0x000005d4   0x000000ec   Code   RO           18    i.adc               pass.o
    0x000006c0   0x000006c0   0x000000f4   Code   RO           19    i.alphadisp7SEG     pass.o
    0x000007b4   0x000007b4   0x00000034   Code   RO           20    i.delay_ms          pass.o
    0x000007e8   0x000007e8   0x00000034   Code   RO           21    i.delay_us          pass.o
    0x0000081c   0x0000081c   0x000001cc   Code   RO           22    i.getAlphaCode      pass.o
    0x000009e8   0x000009e8   0x00000740   Code   RO           23    i.main              pass.o
    0x00001128   0x00001128   0x000000a8   Code   RO           24    i.runDCMotor        pass.o
    0x000011d0   0x000011d0   0x00000084   Code   RO           25    i.show              pass.o
    0x00001254   0x00001254   0x00000048   Code   RO           26    i.uart_init         pass.o
    0x0000129c   0x0000129c   0x00000020   Data   RO          159    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x40000000, Load base: 0x000012bc, Size: 0x000004b8, Max: 0x00008000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x40000000   0x000012bc   0x0000002c   Data   RW           27    .data               pass.o
    0x4000002c   0x000012e8   0x00000004   PAD
    0x40000030        -       0x00000488   Zero   RW            1    STACK               startup.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

      4236        220          0         44          0      12887   pass.o
       264         48          0          0       1160        316   startup.o

    ----------------------------------------------------------------------
      4508        268         32         44       1164      13203   Object Totals
         8          0         32          0          0          0   (incl. Generated)
         0          0          0          0          4          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
        12          4          0          0          0          0   entry9a.o
        56          0          0          0          0          0   handlers.o
        42          8          0          0          0        136   init.o
        32          0          0          0          0         60   strcat.o
        42          0          0          0          0         72   strcmp.o
        54          0          0          0          0         72   uidiv.o

    ----------------------------------------------------------------------
       256         16          0          0          0        340   Library Totals
         6          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       250         16          0          0          0        340   mc_t.l

    ----------------------------------------------------------------------
       256         16          0          0          0        340   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      4764        284         32         44       1164      12775   Grand Totals
      4764        284         32         44       1164      12775   ELF Image Totals
      4764        284         32         44          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                 4796 (   4.68kB)
    Total RW  Size (RW Data + ZI Data)              1208 (   1.18kB)
    Total ROM Size (Code + RO Data + RW Data)       4840 (   4.73kB)

==============================================================================

